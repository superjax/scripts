#!/bin/bash

# Install 32-bit dependencies
sudo apt-get -y install lib32ncurses5

# Download ARM GCC toolchain
#wget https://launchpad.net/gcc-arm-embedded/5.0/5-2016-q1-update/+download/gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2

# Move toolchain binaries to /opt/ directory
#sudo tar -xvf gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2 -C /opt/.

# remove tarball
#rm gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2

# append exectuable to path
#echo 'export PATH=$PATH:/opt/gcc-arm-none-eabi-5_3-2016q1/bin' >> ~/.bashrc

# Install gcc-arm-none-eabi
sudo add-apt-repository ppa:team-gcc-arm-embedded/ppa
sudo apt install -y lib32ncurses5 gcc-arm-embedded

#Install stm32flash utility
git clone git://git.code.sf.net/p/stm32flash/code stm32flash-code
cd stm32flash-code
sudo make install
cd ..
rm -rf stm32flash-code

# Install Debugger Support
https://github.com/gnu-mcu-eclipse/openocd/releases/download/v0.10.0-5-20171110/gnu-mcu-eclipse-openocd-0.10.0-5-20171110-1117-debian64.tgz
tar -xvf gnu-mcu-eclipse-openocd-0.10.0-5-20171110-1117-debian64.tgz
sudo mv openocd /opt/.
rm gnu-mcu-eclipse-openocd-0.10.0-5-20171110-1117-debian64.tgz

# Create F1 open ocd script
echo "#!/bin/bash
cd /opt/openocd/0.10.0-5-20171110-1117/bin
./openocd -f interface/stlink-v2.cfg -f target/stm32f1x.cfg" > ~/start_openocd_f1
sudo chmod +x ~/start_openocd_f1
sudo mv ~/start_openocd_f1 /usr/local/bin

# Create F1 open ocd script
echo "#!/bin/bash
cd /opt/openocd/0.10.0-5-20171110-1117/bin
./openocd -f interface/stlink-v2.cfg -f target/stm32f4x.cfg" > ~/start_openocd_f4
sudo chmod +x ~/start_openocd_f4
sudo mv ~/start_openocd_f4

# Remove modem manager (which gets in the way of STM's VCP for F3 and F4 devices)
sudo apt purge -y modemmanager

# Create udev rule for F4 Devices
echo "# DFU (Internal bootloader for STM32 MCUs)
SUBSYSTEM==/"usb/", ATTRS{idVendor}==/"0483/", ATTRS{idProduct}==/"df11/", MODE=/"0664/", GROUP=/"plugdev/"" > ~/45-stdfu-permissions.rules
sudo mv ~/45-stdfu-permissions.rules /etc/udev/rules.d/.

# Add user to the dailout and plugdev groups
sudo adduser $USER dialout plugdev

# Add 32-bit python support so QtCreator can use OpenOCD
sudo dpkg --add-architecture i386
sudo apt-get update
sudo apt-get install -y libpython2.7:i386

echo_blue "ROSflight toolchain installation finished.  Please restart your machine to complete installation"
